{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\work\\\\npm\\\\react-demo 1\\\\src\\\\components\\\\DataTableExample.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Dropdown } from 'primereact/dropdown'; // import { InputText } from 'primereact/inputtext';\n// import { MultiSelect } from 'primereact/multiselect';\n\nimport { FilterMatchMode } from 'primereact/api';\nimport axios from \"axios\";\nimport data from \"./data_table.json\";\nimport \"./data_table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DataTableExample = () => {\n  _s();\n\n  const [posts, setPosts] = useState(data);\n  const [filters, setFilters] = useState({\n    \"IMEI\": {\n      value: null,\n      matchMode: FilterMatchMode.START_WITH\n    },\n    \"CFV\": {\n      value: null,\n      matchMode: FilterMatchMode.START_WITH\n    },\n    \"UFV\": {\n      value: null,\n      matchMode: FilterMatchMode.START_WITH\n    },\n    'status': {\n      value: null,\n      matchMode: FilterMatchMode.EQUALS\n    },\n    \"body\": {\n      value: null,\n      matchMode: FilterMatchMode.START_WITH\n    },\n    'global': {\n      value: null,\n      matchMode: FilterMatchMode.CONTAINS\n    }\n  });\n  const filtersMap = {\n    'filters': {\n      value: filters1,\n      callback: setFilters1\n    }\n  }; // const columns = [\n  //   { field: 'IMEI', header: 'IMEI' },\n  //   { field: 'CFV', header: 'Current Firmware Version' },\n  //   { field: 'UFV', header: 'Update Firmware Version' }\n  // ];\n  // const [selectedColumns, setSelectedColumns] = useState(columns);\n  // const onColumnToggle = (event) => {\n  //   let selectedColumns = event.value;\n  //   let orderedSelectedColumns = columns.filter(col => selectedColumns.some(sCol => sCol.field === col.field));\n  //   setSelectedColumns(orderedSelectedColumns);\n  // }\n  // const header = (\n  //   <div style={{ textAlign: 'left' }}>\n  //     <MultiSelect value={selectedColumns} options={columns} optionLabel=\"header\" onChange={onColumnToggle} style={{ width: '20em' }} />\n  //   </div>\n  // );\n  // const columnComponents = selectedColumns.map(col => {\n  //   return <Column key={col.field} field={col.field} header={col.header} />;\n  // });\n  // const [globalFilterValue, setGlobalFilterValue] = useState('');\n  // const onGlobalFilterChange = (e) => {\n  //   const value = e.target.value;\n  //   let _filters = { ...filters };\n  //   _filters['global'].value = value;\n  //   setFilters(_filters);\n  //   setGlobalFilterValue(value);\n  // }\n  // const renderHeader = () => {\n  //   return (\n  //     <div className=\"flex justify-content-end\">\n  //       <span className=\"p-input-icon-left\">\n  //         <i className=\"pi pi-search\" />\n  //         <InputText value={globalFilterValue} onChange={onGlobalFilterChange} placeholder=\"Keyword Search\" />\n  //       </span>\n  //     </div>\n  //   )\n  // }\n  // const header = renderHeader();\n\n  const statuses = ['ready', 'unready'];\n\n  const statusBodyTemplate = rowData => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `customer-badge status-${rowData.status}`,\n      children: rowData.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  };\n\n  const statusItemTemplate = option => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `customer-badge status-${option}`,\n      children: option\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  };\n\n  const statusRowFilterTemplate = options => {\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      value: options.value,\n      options: statuses,\n      onChange: e => options.filterApplyCallback(e.value),\n      itemTemplate: statusItemTemplate,\n      placeholder: \"Select a Status\",\n      className: \"p-column-filter\",\n      showClear: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }; // const onGlobalFilterChange = (e) => {\n  //   const value = e.target.value;\n  //   let _filters = { ...filters };\n  //   _filters[\"global\"].value = value;\n  //   setFilters(_filters);\n  //   setGlobalFilterValue(value);\n  // }\n  // useEffect(() => {\n  //   axios\n  //     .get(\"https://jsonplaceholder.typicode.com/posts\")\n  //     .then((res) => setPosts(res.data));\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"datatable-filter-real\",\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      value: posts,\n      responsiveLayout: \"scroll\",\n      paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n      dataKey: \"id\",\n      paginator: true,\n      emptyMessage: \"No data found.\",\n      className: \"datatable-responsive\",\n      currentPageReportTemplate: \"Showing {first} to {last} of {totalRecords} posts\",\n      rows: 5,\n      showGridlines: true,\n      filters: filters,\n      filterDisplay: \"row\" // header={header}\n      // globalFilterFields={['IMEI', 'CFV.IMEI', 'UFV.IMEI','status']}\n      // loading={}\n      // globalFilterFields={}\n      // header={}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        field: \"IMEI\",\n        filter: true,\n        filterPlaceholder: \"Search by IMEI\",\n        sortable: true,\n        header: \"IMEI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"CFV\",\n        filter: true,\n        filterPlaceholder: \"Search by Current Firmware Version\",\n        sortable: true,\n        header: \"Current Firmware Version\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"UFV\",\n        filter: true,\n        filterPlaceholder: \"Search by Update Firmware Version\",\n        sortable: true,\n        header: \"Update Firmware Version\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"status\",\n        header: \"Status Check\",\n        showFilterMenu: false,\n        filterMenuStyle: {\n          width: '14rem'\n        },\n        style: {\n          minWidth: '12rem'\n        },\n        body: statusBodyTemplate,\n        filter: true,\n        filterElement: statusRowFilterTemplate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"body\",\n        filter: true,\n        sortable: true,\n        header: \"body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataTableExample, \"5uKMq2ntuKnsIuvB/PUNpenuJCE=\");\n\n_c = DataTableExample;\nexport default DataTableExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTableExample\");","map":{"version":3,"names":["React","useState","useEffect","DataTable","Column","Dropdown","FilterMatchMode","axios","data","DataTableExample","posts","setPosts","filters","setFilters","value","matchMode","START_WITH","EQUALS","CONTAINS","filtersMap","filters1","callback","setFilters1","statuses","statusBodyTemplate","rowData","status","statusItemTemplate","option","statusRowFilterTemplate","options","e","filterApplyCallback","width","minWidth"],"sources":["C:/Users/ACER/Desktop/work/npm/react-demo 1/src/components/DataTableExample.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Dropdown } from 'primereact/dropdown';\n// import { InputText } from 'primereact/inputtext';\n// import { MultiSelect } from 'primereact/multiselect';\nimport { FilterMatchMode } from 'primereact/api';\nimport axios from \"axios\";\nimport data from \"./data_table.json\"\nimport \"./data_table.css\";\n\nconst DataTableExample = () => {\n  const [posts, setPosts] = useState(data);\n\n  const [filters, setFilters] = useState({\n    \"IMEI\": { value: null, matchMode: FilterMatchMode.START_WITH },\n    \"CFV\": { value: null, matchMode: FilterMatchMode.START_WITH },\n    \"UFV\": { value: null, matchMode: FilterMatchMode.START_WITH },\n    'status': { value: null, matchMode: FilterMatchMode.EQUALS },\n    \"body\": { value: null, matchMode: FilterMatchMode.START_WITH },\n    'global': { value: null, matchMode: FilterMatchMode.CONTAINS }\n  });\n\n  const filtersMap = {\n    'filters': { value: filters1, callback: setFilters1 },\n};\n\n  // const columns = [\n  //   { field: 'IMEI', header: 'IMEI' },\n  //   { field: 'CFV', header: 'Current Firmware Version' },\n  //   { field: 'UFV', header: 'Update Firmware Version' }\n  // ];\n\n  // const [selectedColumns, setSelectedColumns] = useState(columns);\n\n  // const onColumnToggle = (event) => {\n  //   let selectedColumns = event.value;\n  //   let orderedSelectedColumns = columns.filter(col => selectedColumns.some(sCol => sCol.field === col.field));\n  //   setSelectedColumns(orderedSelectedColumns);\n  // }\n\n  // const header = (\n  //   <div style={{ textAlign: 'left' }}>\n  //     <MultiSelect value={selectedColumns} options={columns} optionLabel=\"header\" onChange={onColumnToggle} style={{ width: '20em' }} />\n  //   </div>\n  // );\n\n  // const columnComponents = selectedColumns.map(col => {\n  //   return <Column key={col.field} field={col.field} header={col.header} />;\n  // });\n\n  // const [globalFilterValue, setGlobalFilterValue] = useState('');\n\n  // const onGlobalFilterChange = (e) => {\n  //   const value = e.target.value;\n  //   let _filters = { ...filters };\n  //   _filters['global'].value = value;\n\n  //   setFilters(_filters);\n  //   setGlobalFilterValue(value);\n  // }\n\n  // const renderHeader = () => {\n  //   return (\n  //     <div className=\"flex justify-content-end\">\n  //       <span className=\"p-input-icon-left\">\n  //         <i className=\"pi pi-search\" />\n  //         <InputText value={globalFilterValue} onChange={onGlobalFilterChange} placeholder=\"Keyword Search\" />\n  //       </span>\n  //     </div>\n  //   )\n  // }\n\n  // const header = renderHeader();\n\n  const statuses = [\n    'ready', 'unready'\n  ];\n\n  const statusBodyTemplate = (rowData) => {\n    return <span className={`customer-badge status-${rowData.status}`}>{rowData.status}</span>;\n  }\n\n  const statusItemTemplate = (option) => {\n    return <span className={`customer-badge status-${option}`}>{option}</span>;\n  }\n\n  const statusRowFilterTemplate = (options) => {\n    return <Dropdown value={options.value} options={statuses} onChange={(e) => options.filterApplyCallback(e.value)} itemTemplate={statusItemTemplate} placeholder=\"Select a Status\" className=\"p-column-filter\" showClear />;\n  }\n\n\n  // const onGlobalFilterChange = (e) => {\n  //   const value = e.target.value;\n  //   let _filters = { ...filters };\n  //   _filters[\"global\"].value = value;\n\n  //   setFilters(_filters);\n  //   setGlobalFilterValue(value);\n  // }\n\n  // useEffect(() => {\n  //   axios\n  //     .get(\"https://jsonplaceholder.typicode.com/posts\")\n  //     .then((res) => setPosts(res.data));\n  // }, []);\n\n  return (\n    <div class=\"datatable-filter-real\">\n      <DataTable\n        value={posts}\n        responsiveLayout=\"scroll\"\n        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n        dataKey=\"id\"\n        paginator\n        emptyMessage=\"No data found.\"\n        className=\"datatable-responsive\"\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} posts\"\n        rows={5}\n        showGridlines\n        filters={filters}\n        filterDisplay=\"row\"\n        // header={header}\n      // globalFilterFields={['IMEI', 'CFV.IMEI', 'UFV.IMEI','status']}\n      // loading={}\n      // globalFilterFields={}\n      // header={}\n      >\n        <Column field=\"IMEI\" filter filterPlaceholder=\"Search by IMEI\" sortable header=\"IMEI\"></Column>\n        <Column field=\"CFV\" filter filterPlaceholder=\"Search by Current Firmware Version\" sortable header=\"Current Firmware Version\"></Column>\n        <Column field=\"UFV\" filter filterPlaceholder=\"Search by Update Firmware Version\" sortable header=\"Update Firmware Version\"></Column>\n        <Column field=\"status\" header=\"Status Check\" showFilterMenu={false} filterMenuStyle={{ width: '14rem' }} style={{ minWidth: '12rem' }} body={statusBodyTemplate} filter filterElement={statusRowFilterTemplate} />\n        <Column field=\"body\" filter sortable header=\"body\"></Column>\n      </DataTable>\n    </div>\n  );\n};\n\nexport default DataTableExample;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}